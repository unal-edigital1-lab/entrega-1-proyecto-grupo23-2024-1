module ControlImagen (
 input clk,
 input rst,
 input [15:0] pixel_actual,
 input [2:0]hambre,
 input [2:0]diversion,
 input [2:0]energia,
 output wire spi_mosi,
 output wire spi_cs,
 output wire spi_sck,
 output wire spi_dc,
 output wire spi_reset


output wire [7:0] c_pixel_imagen

);

wire clk_input_data;
reg restart_frame;
reg [15:0] current_pixel;
reg transmission_done;
reg [15:0] contador_pixel;
reg [23:0] delay_frame;
reg c;

initial begin
	contador_pixel <= 1;
	transmission_done <= 0;
	restart_frame <= 0;
	c_pixel_imagen <= 0;
	current_pixel < = 16'hFFFF;
	delay_frame <= 0;
	c<= 0;
end

Contol_ili ili9225(
		.clk(clk), 
		.rst(rst),
      .frame_done(transmission_done), 
      .input_data(current_pixel),
      .spi_mosi_out(spi_mosi),
		.spi_sck_out(spi_sck), 
      .spi_cs_out(spi_cs), 
      .spi_dc_out(spi_dc),
      .data_clk(clk_input_data),
		.spi_reset(spi_reset),
		.restart_frame(restart_frame)
);

assign [7:0] modulex = contador_pixel % 220;
assign [4:0] x = modulex/11;
assign [4:0] y = contador_pixel/2420;
assign [7:0]c_pixel_imagen = x - 1 + (y - 2)*13;


always @(posedge clk)begin
	if(restart_frame)begin
		if(!c)begin
			c <= 1;
		end
		else begin
			c <= 0;
			restart_frame <= 0;
		end
	end

	if(transmission_done)begin
		if(delay_frame == 12500000)begin
			restart_frame <= 1;
			delay_frame <= 0;
			transmission_done <= 0;
		end
		else begin
			delay_frame <= delay_frame + 1;
		end
	end
	else begin
		delay_frame <= 0;
	end
end



always @(posedge clk_input_data, posedge rst)begin
	if(rst)begin
		contador_pixel <= 1;
		transmission_done <= 0;
		restart_frame <= 0;
		c_pixel_imagen <= 0;
		current_pixel < = 16'hFFFF;
	end
	else begin
		if(contador_pixel == 38720)begin
			transmission_done <= 1;
			current_pixel < = 16'hFFFF;
			contador_pixel <= 1;
		end
		else begin
			case (x)
			0: current_pixel < = 16'hFFFF;
			14:current_pixel < = 16'hFFFF;
			16:current_pixel < = 16'hFFFF;
			18:current_pixel < = 16'hFFFF;
			15: begin
				if(y < 4)begin
					current_pixel <= (hambre > 3)? 16'hFB20:16'hFFFF;
				end
				else begin
					if (y<8)begin
						current_pixel <= (hambre > 2)? 16'hFB20:16'hFFFF;
					end	
					else begin
						if(y < 12)begin
							current_pixel <= (hambre > 1)? 16'hFB20:16'hFFFF;
						end
						else begin
							current_pixel <= (hambre > 0)? 16'hFB20:16'hFFFF;
						end
					end
				end
			end
			17: begin
				if(y < 4)begin
					current_pixel <= (energia > 3)? 16'h07E0:16'hFFFF;
				end
				else begin
					if (y<8)begin
						current_pixel <= (energia > 2)? 16'h07E0:16'hFFFF;
					end	
					else begin
						if(y < 12)begin
							current_pixel <= (energia > 1)? 16'h07E0:16'hFFFF;
						end
						else begin
							current_pixel <= (energia > 0)? 16'h07E0:16'hFFFF;
						end
					end
				end
			end
			19:begin
				if(y < 4)begin
					current_pixel <= (diversion > 3)? 16'hFFE0:16'hFFFF;
				end
				else begin
					if (y<8)begin
						current_pixel <= (diversion > 2)? 16'hFFE0:16'hFFFF;
					end	
					else begin
						if(y < 12)begin
							current_pixel <= (diversion > 1)? 16'hFFE0:16'hFFFF;
						end
						else begin
							current_pixel <= (diversion > 0)? 16'hFFE0:16'hFFFF;
						end
					end
				end
			end
			default: begin
				if (y == 0 | y == 1 | y == 15)begin
					current_pixel <= 16'hFFFF;
				end
				else begin
					current_pixel <= pixel_actual;
				end
			end
			
		endcase
			contador_pixel <= contador_pixel + 1;
		end
	end
end

	 

	 
	 
	 